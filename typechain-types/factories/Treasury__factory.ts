/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Treasury, TreasuryInterface } from "../Treasury";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "daiTokenAddr",
        type: "address",
      },
      {
        internalType: "address",
        name: "usdtTokenAddr",
        type: "address",
      },
      {
        internalType: "address",
        name: "usdcTokenAddr",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "TREASURY_UNRECOGNISED_TOKEN",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "staker",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "enum Treasury.Coin",
        name: "tokenRecieved",
        type: "uint8",
      },
    ],
    name: "UserDeposit",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "vault",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "enum Treasury.Coin",
        name: "tokenSubmit",
        type: "uint8",
      },
    ],
    name: "VaultDeposit",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "vault",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "amountRecieved",
        type: "uint256",
      },
    ],
    name: "VaultWithdraw",
    type: "event",
  },
  {
    inputs: [],
    name: "DAI",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "USDC",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "USDT",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "calculateTotalYield",
    outputs: [
      {
        internalType: "uint256",
        name: "totalYield",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "vault",
        type: "address",
      },
    ],
    name: "depositToProtocol",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "depositToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "protocolAllocation",
    outputs: [
      {
        internalType: "uint256",
        name: "dai",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "usdc",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "usdt",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "vault",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "daiPercentage",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "usdcPercentage",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "usdtPercentage",
        type: "uint256",
      },
    ],
    name: "setAllocation",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "userFunds",
    outputs: [
      {
        internalType: "uint256",
        name: "dai",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "usdc",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "usdt",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "vaults",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "vault",
        type: "address",
      },
    ],
    name: "withdrawFromProtocol",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "yeildPerVault",
    outputs: [
      {
        internalType: "uint256",
        name: "amountAllocated",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountRecieved",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "yeildGenerated",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "coinAddr",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x6101006040523480156200001257600080fd5b506040516200209938038062002099833981810160405281019062000038919062000192565b8273ffffffffffffffffffffffffffffffffffffffff1660a08173ffffffffffffffffffffffffffffffffffffffff16815250508173ffffffffffffffffffffffffffffffffffffffff1660c08173ffffffffffffffffffffffffffffffffffffffff16815250508073ffffffffffffffffffffffffffffffffffffffff1660e08173ffffffffffffffffffffffffffffffffffffffff1681525050620000e46200012060201b60201c565b73ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1681525050505050620001ee565b600033905090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006200015a826200012d565b9050919050565b6200016c816200014d565b81146200017857600080fd5b50565b6000815190506200018c8162000161565b92915050565b600080600060608486031215620001ae57620001ad62000128565b5b6000620001be868287016200017b565b9350506020620001d1868287016200017b565b9250506040620001e4868287016200017b565b9150509250925092565b60805160a05160c05160e051611e166200028360003960008181610878015281816110c60152818161118101526112db01526000818161092201528181610f1601528181610fd0015261133e0152600081816107ce01528181610d6601528181610e2001526113620152600081816102a101528181610a5b01528181610b8b01528181610c5101526113860152611e166000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c80638387c6e11161008c578063c54e44eb11610066578063c54e44eb14610215578063e0bab4c414610233578063ebe0c84014610251578063ee67432e1461026d576100cf565b80638387c6e11461019557806389a30271146101c75780638c64ea4a146101e5576100cf565b806313f4e3e0146100d457806326b20010146100f05780632d27eb2914610123578063338b5dea1461014157806351cff8d91461015d5780635f16533914610179575b600080fd5b6100ee60048036038101906100e991906116fb565b61029f565b005b61010a600480360381019061010591906116fb565b610639565b60405161011a9493929190611750565b60405180910390f35b61012b610689565b6040516101389190611795565b60405180910390f35b61015b600480360381019061015691906117dc565b610742565b005b610177600480360381019061017291906116fb565b610a59565b005b610193600480360381019061018e919061181c565b610c4f565b005b6101af60048036038101906101aa91906116fb565b6112af565b6040516101be9392919061185c565b60405180910390f35b6101cf6112d9565b6040516101dc9190611893565b60405180910390f35b6101ff60048036038101906101fa91906118ae565b6112fd565b60405161020c9190611893565b60405180910390f35b61021d61133c565b60405161022a9190611893565b60405180910390f35b61023b611360565b6040516102489190611893565b60405180910390f35b61026b600480360381019061026691906118db565b611384565b005b610287600480360381019061028291906116fb565b6114fd565b6040516102969392919061185c565b60405180910390f35b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166102de611527565b73ffffffffffffffffffffffffffffffffffffffff1614610334576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161032b9061199f565b60405180910390fd5b6000600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008173ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016103d69190611893565b602060405180830381865afa1580156103f3573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061041791906119d4565b90508273ffffffffffffffffffffffffffffffffffffffff1663853828b66040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561046157600080fd5b505af1158015610475573d6000803e3d6000fd5b5050505060008273ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016104b49190611893565b602060405180830381865afa1580156104d1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104f591906119d4565b9050600082826105059190611a30565b905080600360008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010181905550600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000015460648261059e9190611a64565b6105a89190611ad5565b600360008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020181905550808573ffffffffffffffffffffffffffffffffffffffff167f0ac60fbf53b67f5a6a0c8031dd9d1610a06f01669b1a8b9af98f3a6a477e8d7c60405160405180910390a35050505050565b60036020528060005260406000206000915090508060000154908060010154908060020154908060030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905084565b600080600090505b60008054905081101561073e57600360008083815481106106b5576106b4611b06565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020154826107299190611b35565b9150808061073690611b69565b915050610691565b5090565b8173ffffffffffffffffffffffffffffffffffffffff166323b872dd610766611527565b30846040518463ffffffff1660e01b815260040161078693929190611bb1565b6020604051808303816000875af11580156107a5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107c99190611c20565b5060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361087657816002600061082c611527565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000181905550600090506109fe565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036109205781600260006108d6611527565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010181905550600290506109fd565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036109ca578160026000610980611527565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020181905550600190506109fc565b6040517f8ecd1d1200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5b5b81610a07611527565b73ffffffffffffffffffffffffffffffffffffffff167f41898e8688bab821f6399cd945781df9bf9a8af4475b132667a6dbb6e6799b4683604051610a4c9190611cc4565b60405180910390a3505050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16610a98611527565b73ffffffffffffffffffffffffffffffffffffffff1614610aee576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ae59061199f565b60405180910390fd5b60008173ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610b299190611893565b602060405180830381865afa158015610b46573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b6a91906119d4565b90508173ffffffffffffffffffffffffffffffffffffffff166323b872dd307f0000000000000000000000000000000000000000000000000000000000000000846040518463ffffffff1660e01b8152600401610bc993929190611bb1565b6020604051808303816000875af1158015610be8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c0c9190611c20565b610c4b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c4290611d2b565b60405180910390fd5b5050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16610c8e611527565b73ffffffffffffffffffffffffffffffffffffffff1614610ce4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cdb9061199f565b60405180910390fd5b60008273ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610d1f9190611893565b602060405180830381865afa158015610d3c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d6091906119d4565b905060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610f14576064600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000015483610e079190611a64565b610e119190611ad5565b9050610e1e84848461152f565b7f0000000000000000000000000000000000000000000000000000000000000000600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808373ffffffffffffffffffffffffffffffffffffffff167fa5a507b089e338e45576a5e16c9bb7126b3f54cb1a3b946cc8ec80eddef88c4d6000604051610f079190611cc4565b60405180910390a36112a9565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16036110c4576064600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206002015483610fb79190611a64565b610fc19190611ad5565b9050610fce84848361152f565b7f0000000000000000000000000000000000000000000000000000000000000000600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808373ffffffffffffffffffffffffffffffffffffffff167fa5a507b089e338e45576a5e16c9bb7126b3f54cb1a3b946cc8ec80eddef88c4d60016040516110b79190611cc4565b60405180910390a36112a8565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603611275576103e8600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010154836111689190611a64565b6111729190611ad5565b905061117f84848361152f565b7f0000000000000000000000000000000000000000000000000000000000000000600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808373ffffffffffffffffffffffffffffffffffffffff167fa5a507b089e338e45576a5e16c9bb7126b3f54cb1a3b946cc8ec80eddef88c4d60026040516112689190611cc4565b60405180910390a36112a7565b6040517f8ecd1d1200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5b5b50505050565b60026020528060005260406000206000915090508060000154908060010154908060020154905083565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000818154811061130d57600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166113c3611527565b73ffffffffffffffffffffffffffffffffffffffff1614611419576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114109061199f565b60405180910390fd5b604051806060016040528084815260200182815260200183815250600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000820151816000015560208201518160010155604082015181600201559050506000849080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050505050565b60016020528060005260406000206000915090508060000154908060010154908060020154905083565b600033905090565b8273ffffffffffffffffffffffffffffffffffffffff1663095ea7b383836040518363ffffffff1660e01b815260040161156a929190611d4b565b6020604051808303816000875af1158015611589573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115ad9190611c20565b6115ec576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016115e390611dc0565b60405180910390fd5b8173ffffffffffffffffffffffffffffffffffffffff1663de5f62686040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561163457600080fd5b505af1158015611648573d6000803e3d6000fd5b5050505080600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000181905550505050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006116c88261169d565b9050919050565b6116d8816116bd565b81146116e357600080fd5b50565b6000813590506116f5816116cf565b92915050565b60006020828403121561171157611710611698565b5b600061171f848285016116e6565b91505092915050565b6000819050919050565b61173b81611728565b82525050565b61174a816116bd565b82525050565b60006080820190506117656000830187611732565b6117726020830186611732565b61177f6040830185611732565b61178c6060830184611741565b95945050505050565b60006020820190506117aa6000830184611732565b92915050565b6117b981611728565b81146117c457600080fd5b50565b6000813590506117d6816117b0565b92915050565b600080604083850312156117f3576117f2611698565b5b6000611801858286016116e6565b9250506020611812858286016117c7565b9150509250929050565b6000806040838503121561183357611832611698565b5b6000611841858286016116e6565b9250506020611852858286016116e6565b9150509250929050565b60006060820190506118716000830186611732565b61187e6020830185611732565b61188b6040830184611732565b949350505050565b60006020820190506118a86000830184611741565b92915050565b6000602082840312156118c4576118c3611698565b5b60006118d2848285016117c7565b91505092915050565b600080600080608085870312156118f5576118f4611698565b5b6000611903878288016116e6565b9450506020611914878288016117c7565b9350506040611925878288016117c7565b9250506060611936878288016117c7565b91505092959194509250565b600082825260208201905092915050565b7f54726561737572793a2055736572206973206e6f7420746865204f776e657221600082015250565b6000611989602083611942565b915061199482611953565b602082019050919050565b600060208201905081810360008301526119b88161197c565b9050919050565b6000815190506119ce816117b0565b92915050565b6000602082840312156119ea576119e9611698565b5b60006119f8848285016119bf565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611a3b82611728565b9150611a4683611728565b9250828203905081811115611a5e57611a5d611a01565b5b92915050565b6000611a6f82611728565b9150611a7a83611728565b9250828202611a8881611728565b91508282048414831517611a9f57611a9e611a01565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000611ae082611728565b9150611aeb83611728565b925082611afb57611afa611aa6565b5b828204905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000611b4082611728565b9150611b4b83611728565b9250828201905080821115611b6357611b62611a01565b5b92915050565b6000611b7482611728565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203611ba657611ba5611a01565b5b600182019050919050565b6000606082019050611bc66000830186611741565b611bd36020830185611741565b611be06040830184611732565b949350505050565b60008115159050919050565b611bfd81611be8565b8114611c0857600080fd5b50565b600081519050611c1a81611bf4565b92915050565b600060208284031215611c3657611c35611698565b5b6000611c4484828501611c0b565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60038110611c8d57611c8c611c4d565b5b50565b6000819050611c9e82611c7c565b919050565b6000611cae82611c90565b9050919050565b611cbe81611ca3565b82525050565b6000602082019050611cd96000830184611cb5565b92915050565b7f54726561737572793a205472616e73666572206661696c656400000000000000600082015250565b6000611d15601983611942565b9150611d2082611cdf565b602082019050919050565b60006020820190508181036000830152611d4481611d08565b9050919050565b6000604082019050611d606000830185611741565b611d6d6020830184611732565b9392505050565b7f417070726f76616c206661696c65640000000000000000000000000000000000600082015250565b6000611daa600f83611942565b9150611db582611d74565b602082019050919050565b60006020820190508181036000830152611dd981611d9d565b905091905056fea2646970667358221220d0fb8fdfc5a89a913d7f748c062f2e1dfa1b8592e5fd48bd95bb95c5d861713364736f6c63430008110033";

type TreasuryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TreasuryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Treasury__factory extends ContractFactory {
  constructor(...args: TreasuryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "Treasury";
  }

  deploy(
    daiTokenAddr: string,
    usdtTokenAddr: string,
    usdcTokenAddr: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Treasury> {
    return super.deploy(
      daiTokenAddr,
      usdtTokenAddr,
      usdcTokenAddr,
      overrides || {}
    ) as Promise<Treasury>;
  }
  getDeployTransaction(
    daiTokenAddr: string,
    usdtTokenAddr: string,
    usdcTokenAddr: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      daiTokenAddr,
      usdtTokenAddr,
      usdcTokenAddr,
      overrides || {}
    );
  }
  attach(address: string): Treasury {
    return super.attach(address) as Treasury;
  }
  connect(signer: Signer): Treasury__factory {
    return super.connect(signer) as Treasury__factory;
  }
  static readonly contractName: "Treasury";
  public readonly contractName: "Treasury";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TreasuryInterface {
    return new utils.Interface(_abi) as TreasuryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Treasury {
    return new Contract(address, _abi, signerOrProvider) as Treasury;
  }
}
