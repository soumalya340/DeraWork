/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Treasury, TreasuryInterface } from "../Treasury";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "protocol",
        type: "address",
      },
    ],
    name: "addDefiProtocol",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "allocations",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "calculateTotalYield",
    outputs: [
      {
        internalType: "uint256",
        name: "totalYield",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "defiProtocols",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "depositToProtocol",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "protocol",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "percentage",
        type: "uint256",
      },
    ],
    name: "setAllocation",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdrawFromProtocol",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061001a3361001f565b61006f565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b61086e8061007e6000396000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c806352a9039c1161006657806352a9039c14610124578063715018a6146101445780638da5cb5b1461014c5780639076c1661461015d578063f2fde38b1461017057600080fd5b8063076549e2146100a35780630f4eb285146100d357806318d6f549146100e85780632d27eb29146100fb5780633a4e269f14610111575b600080fd5b6100b66100b13660046106e5565b610183565b6040516001600160a01b0390911681526020015b60405180910390f35b6100e66100e136600461071a565b6101ad565b005b6100e66100f6366004610744565b6103bc565b610103610416565b6040519081526020016100ca565b6100e661011f36600461071a565b6104e2565b610103610132366004610744565b60016020526000908152604090205481565b6100e661058a565b6000546001600160a01b03166100b6565b6100e661016b36600461071a565b61059e565b6100e661017e366004610744565b6105c2565b6002818154811061019357600080fd5b6000918252602090912001546001600160a01b0316905081565b6101b561063b565b60405163095ea7b360e01b8152306004820152602481018290526001600160a01b0383169063095ea7b3906044016020604051808303816000875af1158015610202573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102269190610766565b6102695760405162461bcd60e51b815260206004820152600f60248201526e105c1c1c9bdd985b0819985a5b1959608a1b60448201526064015b60405180910390fd5b6000805b6002548110156103715760006064600160006002858154811061029257610292610788565b60009182526020808320909101546001600160a01b031683528201929092526040019020546102c190866107b4565b6102cb91906107d1565b9050600282815481106102e0576102e0610788565b600091825260209091200154604051636e553f6560e01b8152600481018390526001600160a01b03878116602483015290911690636e553f6590604401600060405180830381600087803b15801561033757600080fd5b505af115801561034b573d6000803e3d6000fd5b50505050808361035b91906107f3565b925050808061036990610806565b91505061026d565b508181146103b75760405162461bcd60e51b8152602060048201526013602482015272082d8d8dec6c2e8d2dedc40dad2e6dac2e8c6d606b1b6044820152606401610260565b505050565b6103c461063b565b600280546001810182556000919091527f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace0180546001600160a01b0319166001600160a01b0392909216919091179055565b6000805b6002548110156104de576002818154811061043757610437610788565b60009182526020909120015460405163159eb75960e21b815273f39fd6e51aad88f6f4ce6ab8827279cfffb9226660048201526001600160a01b039091169063567add6490602401602060405180830381865afa15801561049c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104c0919061081f565b6104ca90836107f3565b9150806104d681610806565b91505061041a565b5090565b6104ea61063b565b60005b6002548110156103b7576002818154811061050a5761050a610788565b600091825260209091200154604051627b8a6760e11b8152600481018490526001600160a01b0385811660248301529091169062f714ce90604401600060405180830381600087803b15801561055f57600080fd5b505af1158015610573573d6000803e3d6000fd5b50505050808061058290610806565b9150506104ed565b61059261063b565b61059c6000610695565b565b6105a661063b565b6001600160a01b03909116600090815260016020526040902055565b6105ca61063b565b6001600160a01b03811661062f5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610260565b61063881610695565b50565b6000546001600160a01b0316331461059c5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610260565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000602082840312156106f757600080fd5b5035919050565b80356001600160a01b038116811461071557600080fd5b919050565b6000806040838503121561072d57600080fd5b610736836106fe565b946020939093013593505050565b60006020828403121561075657600080fd5b61075f826106fe565b9392505050565b60006020828403121561077857600080fd5b8151801515811461075f57600080fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b80820281158282048414176107cb576107cb61079e565b92915050565b6000826107ee57634e487b7160e01b600052601260045260246000fd5b500490565b808201808211156107cb576107cb61079e565b6000600182016108185761081861079e565b5060010190565b60006020828403121561083157600080fd5b505191905056fea2646970667358221220350f3a7fb969de966331a0d87cbbefcbcbb6b73394ddef0f886e0ed1d7b508c864736f6c63430008110033";

type TreasuryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TreasuryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Treasury__factory extends ContractFactory {
  constructor(...args: TreasuryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "Treasury";
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Treasury> {
    return super.deploy(overrides || {}) as Promise<Treasury>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Treasury {
    return super.attach(address) as Treasury;
  }
  connect(signer: Signer): Treasury__factory {
    return super.connect(signer) as Treasury__factory;
  }
  static readonly contractName: "Treasury";
  public readonly contractName: "Treasury";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TreasuryInterface {
    return new utils.Interface(_abi) as TreasuryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Treasury {
    return new Contract(address, _abi, signerOrProvider) as Treasury;
  }
}
